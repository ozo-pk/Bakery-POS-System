
package com.mycompany.pos;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


public class PrintWindow extends javax.swing.JFrame {

    /**
     * Creates new form PrintWindow
     */
    public PrintWindow() {
    initComponents(); // GUI setup
    setTitle("Receipt Preview - The Bakery Shop");
  

    setSize(400, 600);            // ✅ Adjust size for readability
    setResizable(false);          // Disable resizing
	setLocationRelativeTo(null);  // ✅ Center on screen
	

    txtReceipt.setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 13));
    txtReceipt.setColumns(40);               // Adjust for clean wrapping
    txtReceipt.setLineWrap(true);            // Wrap long lines
    txtReceipt.setWrapStyleWord(false);      // Do not break mid-word
	

	
}
    
    
    public PrintWindow(String receiptText) {
    initComponents();             // call GUI setups
	      // optional but good UX
    txtReceipt.setText(receiptText);  // set the passed receipt text
	
	  // Force receipt size
    setSize(400, 600); // ✅ Wider frame
    setResizable(false);
	

	
	txtReceipt.setColumns(40); // Set typical receipt width
txtReceipt.setLineWrap(true);  // Allow clean wrapping
txtReceipt.setWrapStyleWord(false);
txtReceipt.setFont(new java.awt.Font("Monospaced", java.awt.Font.PLAIN, 12));

		setLocationRelativeTo(null);  
	
}
	
private static String centerText(String text, int width) {
    if (text.length() >= width) return text;
    int leftPadding = (width - text.length()) / 2;
    return " ".repeat(leftPadding) + text;
}



	
	
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtReceipt = new javax.swing.JTextArea();
        btnPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Receipt Preview");
        setMaximumSize(new java.awt.Dimension(260, 500));
        setMinimumSize(new java.awt.Dimension(260, 500));
        setPreferredSize(new java.awt.Dimension(260, 500));
        setResizable(false);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(240, 420));

        txtReceipt.setEditable(false);
        txtReceipt.setBackground(new java.awt.Color(255, 255, 255));
        txtReceipt.setColumns(32);
        txtReceipt.setFont(new java.awt.Font("Monospaced", 1, 16)); // NOI18N
        txtReceipt.setRows(28);
        txtReceipt.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtReceipt);

        btnPrint.setBackground(new java.awt.Color(44, 88, 110));
        btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnPrint.setForeground(new java.awt.Color(255, 255, 255));
        btnPrint.setText("Print");
        btnPrint.setPreferredSize(new java.awt.Dimension(100, 35));
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
    try {
        boolean complete = txtReceipt.print();  // Built-in JTextArea print
        if (complete) {
            JOptionPane.showMessageDialog(this, "Printing complete.");
            dispose();  // ← ✅ add this line to auto-close after printing
        } else {
            JOptionPane.showMessageDialog(this, "Printing cancelled.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Printing failed: " + e.getMessage());
    }
}//GEN-LAST:event_btnPrintActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 int receiptWidth = 40;
            StringBuilder sb = new StringBuilder();

            LocalDateTime now = LocalDateTime.now();
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");

            // Header
            sb.append(centerText("The Bakery Shop", receiptWidth)).append("\n");
            sb.append(centerText("123 Main Street", receiptWidth)).append("\n");
            sb.append(centerText("Phone: 0300-1234567", receiptWidth)).append("\n");
            sb.append(centerText(dtf.format(now), receiptWidth)).append("\n");
            sb.append("-".repeat(receiptWidth)).append("\n");

            // Item Table Header
            sb.append(String.format("%-20s %5s %10s\n", "Item", "Qty", "Price"));
            sb.append("-".repeat(receiptWidth)).append("\n");

            // Sample items
            sb.append(String.format("%-20s %5d %10.2f\n", "Bread", 2, 120.0));
            sb.append(String.format("%-20s %5d %10.2f\n", "Donut", 1, 80.0));

            // Footer
            sb.append("-".repeat(receiptWidth)).append("\n");
            sb.append(String.format("%-20s %5s %10.2f\n", "Total", "", 200.0));
            sb.append("\n");
            sb.append(centerText("Thank you for your purchase!", receiptWidth)).append("\n");

            String receipt = sb.toString();
            new PrintWindow(receipt).setVisible(true); // ✅ Open print window with centered receipt
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPrint;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtReceipt;
    // End of variables declaration//GEN-END:variables
}
